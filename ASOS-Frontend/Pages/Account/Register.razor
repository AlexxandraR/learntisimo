@page "/register"

@using System.Net.Http
@using System.Text
@using System.Text.Json
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Authorization
@using System.Text.Json.Serialization
@using System.Net.Http.Headers;
@using FormInputModels.Account;

@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService AuthService

<PageTitle>Registrácia</PageTitle>

<style>
	@@media only screen and (max-width: 820px) {
	#container {
	height: 100%;
	max-width: unset !important;
	}

	#register-card {
	padding: 24px !important;
	}
	}
</style>

<div style="display:flex; height:100%; padding:12px;">
	<RadzenRow id="container" Gap="0" Class="rz-m-auto rz-border-radius-6 rz-shadow-10" Style="width: 100%; max-width: 800px; overflow: auto; z-index:100; row-gap:0;">
		<RadzenColumn Size="12" SizeMD="6">
			<RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-text-align-center rz-p-12" Style="height:100%; background: var(--rz-primary-light); display:flex; flex-direction:column; justify-content:center;">
				<RadzenText TextStyle="TextStyle.DisplayH3" TagName="TagName.H2" Class="rz-color-white rz-mb-6">Vitajte!</RadzenText>
				<RadzenText TextStyle="TextStyle.Body2" Class="rz-color-white">Pre pokračovanie do rezervačného systému zadajte Vaše prihlasovacie údaje alebo vytvorte nové používateľské konto.</RadzenText>
			</RadzenCard>
		</RadzenColumn>
		<RadzenColumn Size="12" SizeMD="6">
			<RadzenCard id="register-card" Class="rz-shadow-0 rz-border-radius-0 rz-p-12" Style="height:100%;">
				<EditForm EditContext="editContext">
					<FluentValidationValidator @ref="_fluentValidator" />
					<RadzenStack Gap="0.75rem">
						<h2 class="rz-mb-0">Registrácia</h2>
						<MudTextField T="string" Label="Meno" Variant="MudBlazor.Variant.Filled" ShrinkLabel @bind-Value="Input.FirstName" For="@(() => Input.FirstName)" />
						<MudTextField T="string" Label="Priezvisko" Variant="MudBlazor.Variant.Filled" ShrinkLabel @bind-Value="Input.LastName" For="@(() => Input.LastName)" />
						<MudTextField T="string" Label="Tel.číslo" Variant="MudBlazor.Variant.Filled" ShrinkLabel @bind-Value="Input.PhoneNumber" For="@(() => Input.PhoneNumber)" />
						<MudTextField T="string" Label="Email" Variant="MudBlazor.Variant.Filled" ShrinkLabel @bind-Value="Input.Email" For="@(() => Input.Email)" />
						<MudTextField T="string" Label="Heslo" Variant="MudBlazor.Variant.Filled" InputType="@PasswordInput" ShrinkLabel
						Adornment="MudBlazor.Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ShowHidePassword" AdornmentAriaLabel="Show Password"
						@bind-Value="Input.Password" For="@(() => Input.Password)" />
						<MudTextField T="string" Label="Potvrdenie hesla" Variant="MudBlazor.Variant.Filled" InputType="@PasswordInputConfirm" ShrinkLabel
						Adornment="MudBlazor.Adornment.End" AdornmentIcon="@PasswordInputIconConfirm" OnAdornmentClick="ShowHideConfirmPassword" AdornmentAriaLabel="Zobraziť"
						@bind-Value="Input.ConfirmPassword" For="@(() => Input.ConfirmPassword)" />
						<RadzenRow JustifyContent="JustifyContent.SpaceBetween" Gap="0" RowGap="0.75rem">
							<MudButton Variant="MudBlazor.Variant.Filled" StartIcon="@Icons.Material.Filled.AppRegistration" Color="MudBlazor.Color.Info" Style="width: 145px;" @onclick="async () => await RegisterUser()">Registrovať</MudButton>
							<MudButton Variant="MudBlazor.Variant.Filled" StartIcon="@Icons.Material.Filled.Login" Color="MudBlazor.Color.Info" Style="width: 145px;" @onclick='() => NavigationManager.NavigateTo("/login")'>Prihlásenie</MudButton>
						</RadzenRow>
					</RadzenStack>
				</EditForm>
			</RadzenCard>
		</RadzenColumn>
	</RadzenRow>
</div>


@code {
	bool isShow;
	bool isShowConfirm;
	InputType PasswordInput = MudBlazor.InputType.Password;
	InputType PasswordInputConfirm = MudBlazor.InputType.Password;
	string PasswordInputIcon = MudBlazor.Icons.Material.Filled.VisibilityOff;
	string PasswordInputIconConfirm = MudBlazor.Icons.Material.Filled.VisibilityOff;

	private RegisterInputModel Input = new();
	private EditContext? editContext;
	private FluentValidationValidator? _fluentValidator;

	protected override async Task OnInitializedAsync()
	{
		editContext = new EditContext(Input);

		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;

		if (user.Identity != null && user.Identity.IsAuthenticated)
		{
			NavigationManager.NavigateTo("/#");
		}
	}

	void ShowHidePassword()
	{
		isShow = !isShow;
		PasswordInput = isShow ? MudBlazor.InputType.Text : MudBlazor.InputType.Password;
		PasswordInputIcon = isShow ? MudBlazor.Icons.Material.Filled.Visibility : MudBlazor.Icons.Material.Filled.VisibilityOff;
	}

	void ShowHideConfirmPassword()
	{
		isShowConfirm = !isShowConfirm;
		PasswordInputConfirm = isShowConfirm ? MudBlazor.InputType.Text : MudBlazor.InputType.Password;
		PasswordInputIconConfirm = isShowConfirm ? MudBlazor.Icons.Material.Filled.Visibility : MudBlazor.Icons.Material.Filled.VisibilityOff;
	}

	async Task RegisterUser()
	{
		if (!await _fluentValidator!.ValidateAsync())
		{
			Snackbar.Add("Formulár nebol vyplnený správne.", Severity.Warning);
			return;
		}

		try
		{
			RegisterDto registerDto = new RegisterDto
				{
					Email = Input.Email,
					FirstName = Input.FirstName,
					LastName = Input.LastName,
					PhoneNumber = Input.PhoneNumber,
					Password = Input.Password,
					ConfirmPassword = Input.ConfirmPassword
				};

			await AuthService.RegisterAsync(registerDto);

			Snackbar.Add("Registrácia bola úspešná!", Severity.Success);

			NavigationManager.NavigateTo("/login");
		}
		catch (UnauthorizedAccessException)
		{
			Snackbar.Add("Tento email je už zaregistrovaný!", Severity.Error);
		}
		catch (HttpRequestException)
		{
			Snackbar.Add("Registrácia zlyhala! Skontrolujte pripojenie k internetu.", Severity.Error);
		}
		catch (Exception)
		{
			Snackbar.Add("Registrácia zlyhala! Vyskúšajte to znova neskôr.", Severity.Error);
		}
	}
}