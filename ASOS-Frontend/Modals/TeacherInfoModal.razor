@inject IHttpClientFactory HttpClientFactory

<style>
	.rz-fieldset-legend-text {
		font-weight: bold;
		font-size: large;
	}
</style>

<RadzenStack Style="gap:20px; min-width:250px; max-width:750px;">
	<RadzenFieldset Text="Základné údaje">
		<RadzenRow JustifyContent="JustifyContent.Start" Gap="1rem">
			@if (profileImage != null)
			{
				<RadzenImage Style="width: 200px; height: 225px;" Path="@profileImage" />
			}
			else
			{
				<div style="width: 200px; height: 225px; display: flex; justify-content: center; align-items: center; border: 1px dashed gray; border-radius: 10px;">
					<RadzenIcon Icon="account_circle" Style="color: gray; font-size: 5rem;" />
				</div>
			}
			<RadzenStack Gap="0">
				<RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0" Style="font-size:small;">Titul</RadzenText>
				<RadzenText TextStyle="TextStyle.Body1" Style="font-size:large;"><b>@Teacher.Degree</b></RadzenText>
				<RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0" Style="font-size:small;">Meno</RadzenText>
				<RadzenText TextStyle="TextStyle.Body1" Style="font-size:large;"><b>@Teacher.FirstName </b></RadzenText>
				<RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-mb-0" Style="font-size:small;">Priezvisko</RadzenText>
				<RadzenText TextStyle="TextStyle.Body1" Style="font-size:large;"><b>@Teacher.LastName</b></RadzenText>
				<RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-mb-0" Style="font-size:small;">Email</RadzenText>
				<RadzenText TextStyle="TextStyle.Body1" Style="font-size:large;"><b>@Teacher.Email</b></RadzenText>
				<RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-mb-0" Style="font-size:small;">Tel.číslo</RadzenText>
				<RadzenText TextStyle="TextStyle.Body1" Style="font-size:large;"><b>@Teacher.PhoneNumber</b></RadzenText>
			</RadzenStack>
		</RadzenRow>
	</RadzenFieldset>

	<RadzenFieldset Text="Popis lektora">
		<RadzenText TextStyle="TextStyle.Body1" class="">@Teacher.Description</RadzenText>
	</RadzenFieldset>
</RadzenStack>

@code {
	[Parameter]
	public UserDto Teacher { get; set; }

	string? profileImage;

	protected override async Task OnInitializedAsync()
	{ 
		var httpClient = HttpClientFactory.CreateClient("API");
		var photoResponse = await httpClient.GetAsync($"/photo/{Teacher!.Id}");
		if (photoResponse.IsSuccessStatusCode)
		{
			var imageBytes = await photoResponse.Content.ReadAsByteArrayAsync();
			profileImage = $"data:image/jpeg;base64,{Convert.ToBase64String(imageBytes)}";
		}
	}
}
